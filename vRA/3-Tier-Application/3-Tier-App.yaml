formatVersion: 1
inputs: {}
resources:
  LB_Web:
    type: Cloud.LoadBalancer
    properties:
      routes:
        - protocol: HTTP
          port: 80
          instanceProtocol: HTTP
          instancePort: 80
          healthCheckConfiguration:
            protocol: HTTP
            port: 80
            urlPath: /index.html
            intervalSeconds: 60
            timeoutSeconds: 5
            unhealthyThreshold: 5
            healthyThreshold: 2
      network: '${resource.Web_Routed.id}'
      instances: '${resource.Web_Servers[*].id}'
      internetFacing: false
      gateway: '${resource.App_Gateway.id}'
  Web_Servers:
    type: Cloud.Machine
    properties:
      image: ubuntu
      flavor: Small
      networks:
        - network: '${resource.Web_Routed.id}'
          securityGroups:
            - '${resource.Web_SG.id}'
      count: 2
  App_Server:
    type: Cloud.Machine
    properties:
      count: 1
      image: ubuntu
      flavor: Small
      networks:
        - network: '${resource.App_Routed.id}'
          securityGroups:
            - '${resource.App_SG.id}'
  DB_Server:
    type: Cloud.Machine
    properties:
      count: 1
      image: ubuntu
      flavor: Small
      networks:
        - network: '${resource.DB_Routed.id}'
          securityGroups:
            - '${resource.DB_SG.id}'
  Web_Routed:
    type: Cloud.NSX.Network
    properties:
      networkType: routed
      constraints:
        - tag: 'net:shared-gateway'
  App_Routed:
    type: Cloud.NSX.Network
    properties:
      networkType: routed
      constraints:
        - tag: 'net:shared-gateway'
  DB_Routed:
    type: Cloud.NSX.Network
    properties:
      networkType: routed
      constraints:
        - tag: 'net:shared-gateway'
  App_Gateway:
    type: Cloud.NSX.Gateway
    properties:
      networks:
        - '${resource.Web_Routed.id}'
        - '${resource.App_Routed.id}'
        - '${resource.DB_Routed.id}'
  Web_SG:
    type: Cloud.SecurityGroup
    properties:
      securityGroupType: new
      name: Web_Servers
      rules:
        - name: HTTP
          direction: inbound
          protocol: TCP
          ports: 80
          access: Allow
          source: any
  App_SG:
    type: Cloud.SecurityGroup
    properties:
      securityGroupType: new
      name: App_Servers
      rules:
        - name: TCP8443
          direction: inbound
          protocol: TCP
          ports: 8443
          access: Allow
          source: '${resource.Web_SG.id}'
  DB_SG:
    type: Cloud.SecurityGroup
    properties:
      name: DB_Servers
      securityGroupType: new
      rules:
        - name: TCP6379
          direction: inbound
          protocol: TCP
          ports: 6379
          access: Allow
          source: '${resource.App_SG.id}'